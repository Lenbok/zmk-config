/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};


/ {

    /* KEY POSITIONS

    (regular)
    ╭────────────────────────╮ ╭────────────────────────╮
    │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
    │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
    │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
    ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
                ╰────────────╯ ╰────────────╯
    (encoder)
    ╭────────────────────────╮ ╭────────────────────────╮
    │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
    │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
    │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
    ╰───────╮ 36  37  38  39 │ │ 40  41  42  43 ╭───────╯
            ╰────────────────╯ ╰────────────────╯
    */

        combos {
                compatible = "zmk,combos";
                combo_grave {
                        timeout-ms = <50>;
                        key-positions = <1 2>;
                        layers = <DEF>;
                        bindings = <&kp GRAVE>;
                };
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <1 2>;
                        layers = <LWR RSE>;
                        bindings = <&kp ESC>;
                };
                combo_btclr {
                        timeout-ms = <50>;
                        key-positions = <5 6>;
                        layers = <ADJ>;
                        //bindings = <&bt BT_CLR>;
                        bindings = <&kp GRAVE>;
                };
        };

        behaviors {
                // Make it so triple tap is required for destructive functions
                td0: tap_dance_btclr {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_BTCLR";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&none>, <&none>, <&bt BT_CLR>;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <LWR RSE>;
                        then-layer = <ADJ>;
                };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
// -----------------------------------------------------------------------------------------
// | GUI/~    |   Q  |    W  |  E  |  R  |  T  |     |  Y  |  U   |  I  |  O  |  P  | BKSP   |
// | CTRL/TAB |   A  |    S  |  D  |  F  |  G  |     |  H  |  J   |  K  |  L  |  ;  |  '     |
// | SHFT/(   |   Z  |    X  |  C  |  V  |  B  |     |  N  |  M   |  ,  |  .  |  /  | SHFT/) |
//                           | ALT | ENT | LWR |     | RSE | ENT  | CTRL|
                        bindings = <
   &mt LWIN GRAVE   &kp Q    &kp W      &kp E          &kp R    &kp T       &kp Y    &kp U     &kp I     &kp O    &kp P     &mt LWIN BSPC
   &mt LCTRL TAB    &kp A    &kp S      &kp D          &kp F    &kp G       &kp H    &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
   &mt LSHFT LPAR   &kp Z    &kp X      &kp C          &kp V    &kp B       &kp N    &kp M     &kp COMMA &kp DOT  &kp FSLH  &mt RSHFT RPAR
                             &kp C_PP   &mt LALT ESC   &kp RET  &mo LWR     &mo RSE  &kp SPACE &kp RCTL  &none
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                        label = "Default";
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |        |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      | F1  | F2  | F3  | F4  | F5  |        | LFT | DWN |  UP | RGT |     |      |
// |      | F6  | F7  | F8  | F9  | F10 |        |     |     |     |     |     |      |
//                    |     | ADJ |     |        | ADJ |     |     |
                        bindings = <
   &mt LWIN ESC &kp N1      &kp N2     &kp N3      &kp N4      &kp N5            &kp N6   &kp N7   &kp N8 &kp N9    &kp N0   &trans
   &trans       &kp F1      &kp F2     &kp F3      &kp F4      &kp F5            &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp BSPC &trans
   &trans       &kp F6      &kp F7     &kp F8      &kp F9      &kp F10           &trans   &trans   &trans &trans    &trans   &trans
                            &kp C_PREV &trans      &trans      &trans            &trans   &trans  &trans &none
                        >;
                        sensor-bindings = <&inc_dec_cp LC(PLUS) LC(MINUS)>;
                        label = "Lower";
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |        |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | CTRL |     |     |     |     |     |        |  -  |  +  |  {  |  }  | "|" |      |
// | SHFT |     |     |     |     |     |        |  _  |  =  |  [  |  ]  |  \  |      |
//                    |     |     | ADJ |        |     | ADJ |     |
                        bindings = <
   &kp  ESC     &kp EXCL    &kp AT     &kp HASH    &kp DLLR    &kp PRCNT         &kp CARET   &kp AMPS    &kp ASTRK  &kp LPAR &kp RPAR &kp DEL
   &trans       &none       &none      &none       &none       &none             &kp MINUS   &kp PLUS    &kp LBRC   &kp RBRC &kp PIPE &trans
   &trans       &none       &none      &none       &none       &none             &kp UNDER   &kp EQUAL   &kp LBKT   &kp RBKT &kp BSLH &trans
                            &kp C_NEXT &trans      &trans      &trans            &trans       &trans      &trans     &none
                        >;
                        sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
                        label = "Raise";
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |      |     |     |     |BTCLR|        |     |     |     |     |      | INS  |
// | CAPS | BT0  | BT1 | BT2 | BT3 | BT4 |        |     |     |     |     |      |      |
// |W_CAPS|      |     |     |     |     |        |  <- | -VOL| +VOL| ->  | ||   |      |
//                     |     |     |     |        |     |     |     |
                        bindings = <
   &none        &none        &none        &none        &none        &td0               &td0         &none        &none        &none        &none         &kp INS
   &kp CAPS     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &none        &none        &none        &none        &none         &none
   &caps_word   &none        &none        &none        &none        &none              &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &kp C_PP      &none
                             &kp C_MUTE   &trans       &trans       &trans             &trans       &trans       &trans       &none
                        >;
                        label = "Adjust";
                };
        };
};
